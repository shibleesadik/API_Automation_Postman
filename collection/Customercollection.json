{
	"info": {
		"_postman_id": "fea5efa2-c454-420c-b5c7-cd3b5e9f0baf",
		"name": "Test Customer API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Customer Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var token = jsonData.token;\r",
							"pm.environment.set(\"token\",token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"username\":\"salman\",\r\n\"password\":\"salman1234\"\r\n}"
				},
				"url": {
					"raw": "{{baseURL}}/customer/api/v1/login",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"customer",
						"api",
						"v1",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Customer Login with wrong credential",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Invalid login check\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error.message).to.eql(\"Username or password incorrect\");\r",
							"});\r",
							"pm.test(\"Status code is 401 Unatorized\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"username\":\"salman\",\r\n\"password\":\"salman123456\"\r\n}"
				},
				"url": {
					"raw": "{{baseURL}}/customer/api/v1/login",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"customer",
						"api",
						"v1",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Customer List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Fetch customer list\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.Customers[1].id).to.eql(103);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}/customer/api/v1/list",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"customer",
						"api",
						"v1",
						"list"
					]
				}
			},
			"response": []
		},
		{
			"name": "Search Customer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Search customer\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(103);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}/customer/api/v1/get/103",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"customer",
						"api",
						"v1",
						"get",
						"103"
					]
				}
			},
			"response": []
		},
		{
			"name": "Search Customer with invalid id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Search customer with invalid id\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error.message).to.eql(\"Customer info not found\");\r",
							"});\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}/customer/api/v1/get/102",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"customer",
						"api",
						"v1",
						"get",
						"102"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create New Customer",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let id=_.random(1000, 9999)\r",
							"pm.environment.set(\"id\",id);\r",
							"// const reqObject = {\r",
							"//   url: 'https://api.namefake.com/english-united-states/male/',\r",
							"//   method: 'GET',\r",
							"//   header: 'Content-Type:application/json'\r",
							"// };\r",
							"\r",
							"// pm.sendRequest(reqObject, (err, res) => {\r",
							"//     let {name} = res.json()\r",
							"//     let {phone_w}=res.json()\r",
							"//     let {email_u} = res.json()\r",
							"//     let email=email_u+'@testmail.com'\r",
							"    \r",
							"//     pm.environment.set(\"name\", name);\r",
							"//     pm.environment.set(\"email\", email);\r",
							"//     pm.environment.set(\"phone_number\", phone_w);\r",
							"// });"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"Create New Customer\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"Success\");\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Success\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\":{{id}},\r\n    \"name\":\"{{$randomFullName}}\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"address\":\"{{$randomStreetAddress}}\",\r\n    \"phone_number\":\"{{$randomPhoneNumber}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/customer/api/v1/create",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"customer",
						"api",
						"v1",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Existing Customer",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Create existing customer\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error.message).to.eql(\"Customer already exists\");\r",
							"});\r",
							"pm.test(\"Status code is 208\", function () {\r",
							"    pm.response.to.have.status(208);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\":{{id}},\r\n    \"name\":\"{{$randomFullName}}\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"address\":\"{{$randomStreetAddress}}\",\r\n    \"phone_number\":\"{{$randomPhoneNumber}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/customer/api/v1/create",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"customer",
						"api",
						"v1",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Customer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Update Customer\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.Customers.email).to.eql(\"mrkamal@test.com\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 103,\r\n    \"name\": \"Mr. Kamal\",\r\n    \"email\": \"mrkamal@test.com\",\r\n    \"address\": \"Mirpur, Dhaka\",\r\n    \"phone_number\": \"01502020110\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/customer/api/v1/update/103",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"customer",
						"api",
						"v1",
						"update",
						"103"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Customer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check if customer is deleted\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"Customer deleted!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}/customer/api/v1/delete/{{id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"customer",
						"api",
						"v1",
						"delete",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Customer check if already deleted",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check if customer is already deleted\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error.message).to.eql(\"Customer not found\");\r",
							"});\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}/customer/api/v1/delete/{{id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"customer",
						"api",
						"v1",
						"delete",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	]
}